#Sequence Alignment using Dynamic Time Warping!
import math
P=[1,2,3,5,5,6]
Q=[1,1,2,2,3,5]
mat=[[0 for j in range(len(P)+1)]for i in range(len(Q)+1)]
#initializing the matrix with infinity
for i in range(1,len(P)+1):
  mat[i][0]=math.inf
  mat[0][i]=math.inf
                    # it print the list in matrix form
for i in range(1,len(P)+1):
  for j in range(1,len(Q)+1):
    mat[i][j]=abs(P[i-1]-Q[j-1])+min(mat[i-1][j-1],mat[i][j-1],mat[i-1][j])         #|n| is written as abs(n)
mat
posi=len(P)
posj=len(Q)
print(posi,posj)
d=[]
while posi>=0 and posj>=0:
  if mat[posi][posj]>=mat[posi-1][posj-1]:
    d.append(mat[posi][posj])
    posi-=1
    posj-=1
  elif mat[posi][posj]>=mat[posi-1][posj]:
    d.append(mat[posi][posj])
    posi-=1
  else:
    d.append(mat[posi][posj])
    posj-=1
print('back track :',d)
print('len of d : ',len(D))
sum=0
for i in d:
  sum+=i
print('D : ',sum)
